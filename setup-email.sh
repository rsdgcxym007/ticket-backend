#!/bin/bash
# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Node.js app ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡πà‡∏≤‡∏ô SendGrid
# Author: GitHub Copilot - Email Integration  
# Date: 2025-08-16

set -e

echo "üìß ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Email dependencies..."

# ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backend
cd /var/www/patong-boxing/backend || cd /home/nodeapp/patong-boxing/backend

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á email dependencies
npm install @sendgrid/mail nodemailer dotenv

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå environment ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö email
echo "üìù ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment variables..."

# ‡πÄ‡∏û‡∏¥‡πà‡∏° email settings ‡πÉ‡∏ô .env
cat >> .env << 'EOF'

# Email Settings
SENDGRID_API_KEY=your_sendgrid_api_key_here
FROM_EMAIL=noreply@patongboxingstadiumticket.com  
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-app@patongboxingstadiumticket.com
SMTP_PASS=your-app-password

# Email Templates
COMPANY_NAME=Patong Boxing Stadium
COMPANY_URL=https://patongboxingstadiumticket.com
SUPPORT_EMAIL=support@patongboxingstadiumticket.com
EOF

# ‡∏™‡∏£‡πâ‡∏≤‡∏á email service
echo "üìß ‡∏™‡∏£‡πâ‡∏≤‡∏á email service..."

mkdir -p src/email

cat > src/email/email.service.ts << 'EOF'
import { Injectable } from '@nestjs/common';
import * as sgMail from '@sendgrid/mail';
import * as nodemailer from 'nodemailer';

export interface EmailOptions {
  to: string;
  subject: string;
  html?: string;
  text?: string;
  template?: string;
  data?: any;
}

@Injectable()
export class EmailService {
  private sendGridClient;
  private nodemailerTransporter;

  constructor() {
    // SendGrid setup
    if (process.env.SENDGRID_API_KEY) {
      sgMail.setApiKey(process.env.SENDGRID_API_KEY);
      this.sendGridClient = sgMail;
    }

    // Nodemailer setup (fallback)
    this.nodemailerTransporter = nodemailer.createTransporter({
      host: process.env.SMTP_HOST,
      port: parseInt(process.env.SMTP_PORT || '587'),
      secure: false,
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS,
      },
    });
  }

  async sendEmail(options: EmailOptions): Promise<void> {
    try {
      if (this.sendGridClient && process.env.SENDGRID_API_KEY) {
        await this.sendVia SendGrid(options);
      } else {
        await this.sendViaNodemailer(options);
      }
      console.log(`Email sent successfully to ${options.to}`);
    } catch (error) {
      console.error('Email sending failed:', error);
      throw error;
    }
  }

  private async sendViaSendGrid(options: EmailOptions): Promise<void> {
    const msg = {
      to: options.to,
      from: process.env.FROM_EMAIL,
      subject: options.subject,
      html: options.html || options.text,
      text: options.text,
    };

    await this.sendGridClient.send(msg);
  }

  private async sendViaNodemailer(options: EmailOptions): Promise<void> {
    await this.nodemailerTransporter.sendMail({
      from: `"${process.env.COMPANY_NAME}" <${process.env.FROM_EMAIL}>`,
      to: options.to,
      subject: options.subject,
      html: options.html,
      text: options.text,
    });
  }

  // Email templates
  async sendWelcomeEmail(to: string, name: string): Promise<void> {
    const html = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h1 style="color: #333;">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà ${process.env.COMPANY_NAME}</h1>
        <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${name}!</p>
        <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ ‡πÄ‡∏£‡∏≤‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß Patong Boxing Stadium</p>
        <div style="text-align: center; margin: 30px 0;">
          <a href="${process.env.COMPANY_URL}" style="background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px;">
            ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
          </a>
        </div>
        <p>‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà ${process.env.SUPPORT_EMAIL}</p>
        <hr>
        <p style="color: #666; font-size: 12px;">
          ¬© 2025 ${process.env.COMPANY_NAME}. All rights reserved.
        </p>
      </div>
    `;

    await this.sendEmail({
      to,
      subject: `‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà ${process.env.COMPANY_NAME}`,
      html,
    });
  }

  async sendTicketConfirmation(to: string, ticketData: any): Promise<void> {
    const html = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h1 style="color: #28a745;">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h1>
        <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${ticketData.customerName}!</p>
        <p>‡∏ï‡∏±‡πã‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
        
        <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
          <p><strong>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</strong> ${ticketData.bookingId}</p>
          <p><strong>‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô:</strong> ${ticketData.matchName}</p>
          <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${ticketData.matchDate}</p>
          <p><strong>‡πÄ‡∏ß‡∏•‡∏≤:</strong> ${ticketData.matchTime}</p>
          <p><strong>‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á:</strong> ${ticketData.seatDetails}</p>
          <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> ‡∏ø${ticketData.totalAmount}</p>
        </div>

        <div style="text-align: center; margin: 30px 0;">
          <a href="${process.env.COMPANY_URL}/booking/${ticketData.bookingId}" 
             style="background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px;">
            ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡∏±‡πã‡∏ß
          </a>
        </div>

        <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ô‡∏≥ QR Code ‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡∏≤‡∏°‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô</p>
        <p>‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà ${process.env.SUPPORT_EMAIL}</p>
      </div>
    `;

    await this.sendEmail({
      to,
      subject: `‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß - ${ticketData.matchName}`,
      html,
    });
  }

  async sendPasswordReset(to: string, resetToken: string): Promise<void> {
    const resetUrl = `${process.env.COMPANY_URL}/reset-password?token=${resetToken}`;
    
    const html = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h1 style="color: #dc3545;">‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</h1>
        <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ${to}</p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${resetUrl}" 
             style="background: #dc3545; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px;">
            ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
          </a>
        </div>
        
        <p style="color: #666;">‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
        <p style="color: #666;">‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡∏Å‡πÄ‡∏â‡∏¢‡∏ï‡πà‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ</p>
      </div>
    `;

    await this.sendEmail({
      to,
      subject: '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô - Patong Boxing Stadium',
      html,
    });
  }
}
EOF

# ‡∏™‡∏£‡πâ‡∏≤‡∏á email module
cat > src/email/email.module.ts << 'EOF'
import { Module } from '@nestjs/common';
import { EmailService } from './email.service';

@Module({
  providers: [EmailService],
  exports: [EmailService],
})
export class EmailModule {}
EOF

# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï app.module.ts
echo "üîß ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï app.module.ts..."

# ‡πÄ‡∏û‡∏¥‡πà‡∏° EmailModule ‡πÉ‡∏ô imports (‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠)
echo "
üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÉ‡∏ô src/app.module.ts:

import { EmailModule } from './email/email.module';

‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏° EmailModule ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô imports:
imports: [
  // ... modules ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
  EmailModule,
],
"

# ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó app
echo "üîÑ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó application..."
pm2 restart all

echo ""
echo "‚úÖ Email setup ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!"
echo ""
echo "üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:"
echo "1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ SendGrid API key ‡πÉ‡∏ô .env"
echo "2. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MX records ‡πÉ‡∏ô Cloudflare"  
echo "3. ‡πÄ‡∏û‡∏¥‡πà‡∏° EmailModule ‡πÉ‡∏ô app.module.ts"
echo "4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
echo ""
echo "üß™ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:"
echo "curl -X POST http://localhost:4000/test-email -d '{\"email\":\"test@example.com\"}'"
EOF
